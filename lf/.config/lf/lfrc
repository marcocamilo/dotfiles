#  ────────────────────────────────────────────────────────────────────
#                             BASIC SETTINGS
#  ────────────────────────────────────────────────────────────────────
set hidden true
set ignorecase true
set icons true
set sortby natural
#  ────────────────────────────────────────────────────────────────────
#                           PERSISTENT OPTION
#  ────────────────────────────────────────────────────────────────────
#  ────────────────────────────────────────────────────────────────────
#   sorting                                                            
#  ────────────────────────────────────────────────────────────────────

#  ────────────────────────────────────────────────────────────────────
#                              FILE PREVIEW
#  ────────────────────────────────────────────────────────────────────
#  ────────────────────────────────────────────────────────────────────
#   bat
#  ────────────────────────────────────────────────────────────────────
set previewer ~/.config/lf/bat.sh
map b $~/.config/lf/bat.sh "$f" | less -RX

#  ────────────────────────────────────────────────────────────────────
#                            CUSTOM FUNCTIONS
#  ────────────────────────────────────────────────────────────────────
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File name: "
  read ans
  touch "$ans"
  lf -remote "send $7 reload"  # Reload lf to reflect the new file
}}

cmd setwallpaper ${{
    cp "$f" ~/.config/wall.jpg
    xwallpaper --zoom "$f"
    betterlockscreen -u "$f" --fx
}}

cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    file=${files%%;*}

    trash-put "$(basename "$file")"
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd restore_trash ${{
  trash-restore
}}

cmd copypath ${{
    file_path=$(realpath "$f")
    echo $file_path | pbcopy
  }}

#  ────────────────────────────────────────────────────────────────────
#                                BINDINGS
#  ────────────────────────────────────────────────────────────────────
#  ────────────────────────────────────────────────────────────────────
#   Remove some defaults                                               
#  ────────────────────────────────────────────────────────────────────
map m
map o
map n
map "'"
map '"'
map d
map a
map q

map c $vscodium "$f"

map au unarchive
map ae $wine "$f"

#  ────────────────────────────────────────────────────────────────────
#   Basc Functions                                                     
#  ────────────────────────────────────────────────────────────────────
map . set hidden!
map dd delete
map dr restore_trash
map p paste
map x cut
map y copy
map <enter> open
map R reload
map a mkfile
map md mkdir
map C clear
map r rename
map q quit

#  ────────────────────────────────────────────────────────────────────
#   Movements                                                           
#  ────────────────────────────────────────────────────────────────────
map gh cd ~

map gd. cd ~/documents
map gad cd ~/documents/admin/
map gdc cd ~/documents/config/
map gdf cd ~/documents/finance/
map gdk cd ~/documents/kingdom/
map gdp cd ~/documents/personal/
map gdx cd ~/documents/archive/
map gdr cd ~/documents/resources/


map ga. cd ~/documents/academics
map gahu cd ~/documents/academics/humboldt\ universität\ zu\ berlin/ma\ slawischen\ sprachen
map gapr cd ~/documents/academics/uprrp/

map gds. cd ~/documents/data\ science/
map gdsc cd ~/documents/data\ science/courses/
map gdsp cd ~/documents/data\ science/portfolio/
map gdsj cd ~/documents/data\ science/projects/
map gdsr cd ~/documents/data\ science/resources/
map gdss cd ~/documents/data\ science/sandbox/
map gdsw cd ~/documents/data\ science/website/marcocamilo.com

map gp. cd ~/Documents/Profession/
map gp. cd ~/Documents/Profession/Work/
map gpf cd ~/Documents/Profession/Profile/
map gpp cd ~/Documents/Profession/Portfolio/
map gpr cd ~/Documents/Profession/Resources/


map gD cd ~/downloads

map gc. cd ~/.config
map gcz cd ~/.config/zsh
map gcn cd ~/.config/nvim
map gcl cd ~/.config/lf
map gcy cd ~/.config/yabai
map gcs cd ~/.config/skhd
map gce cd ~/.config/emacs
map gcx cd ~/.config/emacs

map gu cd /usr
map gl cd /usr/local
map gb cd /usr/local/bin
